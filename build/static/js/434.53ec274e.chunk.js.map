{"version":3,"file":"static/js/434.53ec274e.chunk.js","mappings":"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","sources":["Components/Subscription/SubscriptionDetails.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Layout from \"../Layout/Layout\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst SubscriptionDetails = () => {\r\n  const { state } = useLocation();\r\n  console.log(state);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (state) {\r\n      let values = state?.data;\r\n      setValue(\"plan\", values?.subscriptionName);\r\n      setValue(\"price\", values?.planCost);\r\n      setValue(\"validity\", values?.validation);\r\n      setValue(\"description\", values?.description);\r\n      setValue(\"features\", values?.features);\r\n    }\r\n  }, [state?.data]);\r\n\r\n  const onSubmit = async (info) => {\r\n    console.log(info);\r\n  };\r\n\r\n  return (\r\n    <Layout activeSlide={\"Subscription\"}>\r\n      <div className=\"content-body\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-12\">\r\n              <div className=\"card profile-card card-bx m-b30\">\r\n                <div className=\"card-header\">\r\n                  <h6 className=\"title\">{state?.title}</h6>\r\n                </div>\r\n                <form\r\n                  className=\"profile-form\"\r\n                  onSubmit={handleSubmit(onSubmit)}\r\n                >\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-4 m-b30\">\r\n                        <label className=\"form-label\">\r\n                          Subscription Name<sup className=\"mandatesign\">*</sup>\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className={`form-control ${\r\n                            errors.plan ? \"is-invalid\" : \"\"\r\n                          }`}\r\n                          {...register(\"plan\", {\r\n                            required: \"* Plan name is required\",\r\n                            minLength: {\r\n                              value: 2,\r\n                              message: \"Minimum 2 characters\",\r\n                            },\r\n                            maxLength: {\r\n                              value: 15,\r\n                              message: \"Maximum 15 characters\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        {errors.plan && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.plan.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-4 m-b30\">\r\n                        <label className=\"form-label\">\r\n                          Plan Cost<sup className=\"mandatesign\">*</sup>\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className={`form-control ${\r\n                            errors.price ? \"is-invalid\" : \"\"\r\n                          }`}\r\n                          {...register(\"price\", {\r\n                            required: \"* Cost is required\",\r\n                          })}\r\n                        />\r\n                        {errors.price && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.price.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-4 m-b30\">\r\n                        <label className=\"form-label\">\r\n                          Validity (in days)<sup className=\"mandatesign\">*</sup>\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className={`form-control ${\r\n                            errors.validity ? \"is-invalid\" : \"\"\r\n                          }`}\r\n                          {...register(\"validity\", {\r\n                            required: \"* validity is required\",\r\n                          })}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-8 m-b30\">\r\n                        <label className=\"form-label\">\r\n                          Features<sup className=\"mandatesign\">*</sup>\r\n                        </label>\r\n                        <textarea\r\n                          className={`form-control ${\r\n                            errors.features ? \"is-invalid\" : \"\"\r\n                          }`}\r\n                          {...register(\"features\", {\r\n                            required: \"* Features is required\",\r\n                          })}\r\n                          placeholder=\"Videography\"\r\n                        />\r\n                        {errors.features && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.features.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-4 m-b30\">\r\n                        <label className=\"form-label\">\r\n                          Subscribers<sup className=\"mandatesign\">*</sup>\r\n                        </label>\r\n                        <textarea\r\n                          type=\"number\"\r\n                          value={\"20\"}\r\n                          className=\"form-control\"\r\n                        />\r\n                        {/* <textarea\r\n                          className={`form-control ${\r\n                            errors.features ? \"is-invalid\" : \"\"\r\n                          }`}\r\n                          {...register(\"features\", {\r\n                            required: \"* Features is required\",\r\n                          })}\r\n                          placeholder=\"Videography\"\r\n                        />\r\n                        {errors.features && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.features.message}\r\n                          </div>\r\n                        )} */}\r\n                      </div>\r\n                      <div className=\"col-md-12 m-b30\">\r\n                        <label className=\"form-label\">\r\n                          Description<sup className=\"mandatesign\">*</sup>\r\n                        </label>\r\n                        <textarea\r\n                          className={`form-control ${\r\n                            errors.description ? \"is-invalid\" : \"\"\r\n                          }`}\r\n                          {...register(\"description\", {\r\n                            required: \"* Description is required\",\r\n                            minLength: {\r\n                              value: 10,\r\n                              message: \"Minimum 10 characters\",\r\n                            },\r\n                            maxLength: {\r\n                              value: 200,\r\n                              message: \"Maximum 200 characters\",\r\n                            },\r\n                          })}\r\n                          placeholder=\"Comedy is a genre of fiction that consists of discourses ...\"\r\n                        />\r\n                        {errors.description && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.description.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default SubscriptionDetails;\r\n"],"names":["SubscriptionDetails","state","useLocation","console","log","register","handleSubmit","setValue","formState","errors","useForm","mode","useEffect","values","data","subscriptionName","planCost","validation","description","features","_jsx","Layout","activeSlide","children","className","_jsxs","title","onSubmit","async","info","type","concat","plan","required","minLength","value","message","maxLength","price","validity","placeholder"],"sourceRoot":""}